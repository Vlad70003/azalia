import React, { useState, useMemo } from "react";
import Head from "next/head";

import styles from "../styles/Home.module.scss";

import BaseWrapper from "../components/wrappers/baseWrapper/BaseWrapper";
import { useQuery } from "react-query";
import { CategoryService } from "../app/services/category.service";
import BaseWrapperMargin from "../components/wrappers/baseWrapperMargin/BaseWrapperMargin";
import { ProductService } from "../app/services/product.service";
import { Element } from "react-scroll";
import CategoryCatalog from "../components/categoryCatalog/CategoryCatalog";

export default function Home() {
  const [activeScrollPage, setActiveScrollPage] = useState(null);
  const [search, setSearch] = useState("");

  const { data: categoryResponse } = useQuery("category list", () =>
    CategoryService.getAll()
  );

  const { data: productResponse } = useQuery("product list", () =>
    ProductService.getAll()
  );

  const searchFu = (e: string) => {
    setSearch(e);
  };

  const styleHome: any = {
    width: "100%",
    minHeight: "100vh",
    background: "white",
  };

  const productsByCategoryJSON = useMemo(() => {
    const categoryObj: any = {};
    const categoryJson = [];
    productResponse?.data?.forEach((item: any) => {
      Array.isArray(categoryObj[item?.category])
        ? null
        : (categoryObj[item?.category] = []);
      categoryObj[item?.category]?.push(item);
    });

    for (let key in categoryObj) {
      categoryJson?.push({ [key]: categoryObj[key] });
    }

    return categoryJson;
  }, [productResponse?.data]);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <BaseWrapper
        styles={styleHome}
        activeScrollPage={activeScrollPage}
        setActiveScrollPage={setActiveScrollPage}
        categories={categoryResponse?.data}
        search={search}
        setSearch={setSearch}
        searchFu={searchFu}
        isVisible
        header
        navigation
        slider
        footer
      >
        <BaseWrapperMargin flex="auto">
          {productsByCategoryJSON
            ?.sort((a: any, b: any) => {
              if (a.category < b.category) return 1;
              if (a.category > b.category) return -1;
              return 0;
            })
            .map((item: any, ind: number) => {
              const categoryName = Object.keys(item).length
                ? Object.keys(item)[0]
                : null;
              const categoryContent = Object.values(item).length
                ? Object.values(item)[0]
                : null;

              return (
                <Element name={categoryName || String(categoryName)} key={ind}>
                  <CategoryCatalog
                    content={categoryContent}
                    contentName={categoryName}
                  />
                </Element>
              );
            })}
        </BaseWrapperMargin>
      </BaseWrapper>
    </>
  );
}
